openapi: 3.0.1
info:
  title: OAuth2.0
  description: |
    OAuth 2.0 authorization framework is a protocol that allows a third-party client to access protected resources on behalf of a specific resource owner without sharing their credentials. OAuth 2.0 relies on flows to issue access token to the client application.

    You may learn more on our OAuth2.0 process flow <a href="https://docs.developer.paynet.my/docs/oauth/overview"><b>here</b></a> 

    ### Rate Limiting
    We throttle our APIs by default to ensure maximum performance for all developers. Please bear in mind that Access Token can be re-used within specified expiry duration and should not be created for every API request.
  version: v1
servers:
- url: https://mock.developer.paynet.my/
paths:
  /auth: {}
  /auth/token:
    post:
      description: Client application requests for access token via this API using
        their client id and client secret. This service will return generated access
        token which will be valid within specified duration defined in expires_in.
        The access token can be re-used and should be re-generated by client application
        once expired.
      operationId: Authorization
      parameters:
      - name: Accept
        in: header
        description: Default to <b>application/json</b>
        required: true
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        description: Default to <b>application/x-www-form-urlencoded</b>
        required: true
        schema:
          type: string
          default: application/x-www-form-urlencoded
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/requestGetToken'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetToken'
          x-amf-mediaType: application/json
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
          x-amf-mediaType: application/json
        401:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
          x-amf-mediaType: application/json
        500:
          description: ""
          content:
            application/json:
              schema:
                type: object
          x-amf-mediaType: application/json
      x-codegen-request-body-name: generated
components:
  schemas:
    requestGetToken:
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
      properties:
        grant_type:
          type: string
          description: Default to <b>client_credentials</b>
        client_id:
          type: string
          description: Client identification assigned and retrieved in Developer Portal
        client_secret:
          type: string
          description: Client secret assigned and retrieved in Developer Portal
      example:
        grant_type: client_credentials
        client_id: 9d4943bf571d4798bc442c6e3038d209
        client_secret: NH1tsBn_Nv4xd-pzFBTK7uCeZQOiHZvHdZ7waAWyaL_oNjFj
    responseGetToken:
      required:
      - access_token
      - expires_in
      - scope
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: Access token issued to the client
        scope:
          type: string
          description: Scopes granted to the client
        token_type:
          type: string
          description: Token type. Always default to <b>Bearer</b>
        expires_in:
          type: number
          description: Validity of the access token in seconds
      example:
        access_token: eyJraWQiOiJ5YjR6aDZqZnYxcjJhb2Y5OWZxeDZuNG0zZnpicDQ2OCIsImFsZyI6IkhTMjU2In0.eyJzdWIiOiI5ZDQ5NDNiZjU3MWQ0Nzk4YmM0NDJjNmUzMDM4ZDIwOSIsIm5iZiI6MTYwNTI0MTczOSwic2NvcGUiOiJhdXRoOmNsaWVudCIsImlzcyI6Imh0dHBzOlwvXC9hcGkuc2l0LmluZXQucGF5bmV0Lm15XC9hdXRoIiwiZXhwIjoxNjA1MjQxNzk5LCJpYXQiOjE2MDUyNDE3MzksImp0aSI6Im9mdzhyY29haW5pNjBpd2JnNHIwejF5cGY0cGkyaTMxaDZwNWZqMGhrbzZyOGhhZjV1OHY2eTkzaXByeG9qajUifQ.1q16At_8RiGSOzMX4emvbyCY9j3jDHyJD248O6fdpns
        token_type: Bearer
        scope: rpp:merchant rpp:consent
        expires_in: 3600
    error400:
      required:
      - code
      - error_description
      type: object
      properties:
        code:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error code description
      example:
        code: invalid_request
        error_description: Required String parameter 'client_secret' is not present
    error401:
      required:
      - code
      - error_description
      type: object
      properties:
        code:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error code description
      example:
        code: invalid_client
        error_description: invalid client id or secret
